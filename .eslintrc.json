{
  "root": true,
  "ignorePatterns": ["projects/**/*"],
  "overrides": [
    {
      "files": ["*.ts"],
      "parserOptions": {
        "project": ["tsconfig.json"],
        "createDefaultProgram": true
      },
      "extends": [
        "plugin:@angular-eslint/recommended",
        "plugin:@angular-eslint/template/process-inline-templates",
        "eslint:recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended"
      ],
      "rules": {
        // Enforces explicit return types on functions and methods.
        "@typescript-eslint/explicit-function-return-type": [
          "error",
          {
            "allowExpressions": true,
            "allowHigherOrderFunctions": true,
            "allowTypedFunctionExpressions": true
          }
        ],

        // Requires explicit types for module boundaries (e.g., function parameters and return types).
        "@typescript-eslint/explicit-module-boundary-types": "error",

        // Disables inferring types for obvious cases (e.g., `const x = 10`).
        "@typescript-eslint/no-inferrable-types": "off",

        // Enforces explicit type definitions for class properties, variables, and parameters.
        "@typescript-eslint/typedef": [
          "error",
          {
            "arrowParameter": true,
            "variableDeclaration": true,
            "variableDeclarationIgnoreFunction": true,
            "propertyDeclaration": true,
            "memberVariableDeclaration": true,
            "parameter": true,
            "objectDestructuring": false,
            "arrayDestructuring": false
          }
        ],

        // Requires explicit accessibility modifiers (e.g., `public`, `private`, `protected`) for class members.
        "@typescript-eslint/explicit-member-accessibility": [
          "error",
          {
            "accessibility": "explicit",
            "overrides": {
              "accessors": "explicit",
              "constructors": "no-public",
              "methods": "explicit",
              "properties": "explicit",
              "parameterProperties": "explicit"
            }
          }
        ],

        // Enforces a consistent order for class members (e.g., public before private).
        "@typescript-eslint/member-ordering": [
          "error",
          {
            "default": {
              "memberTypes": [
                "public-static-field",
                "public-instance-field",
                "public-abstract-field",
                "public-field",
                "private-static-field",
                "private-instance-field",
                "private-field",
                "public-static-method",
                "public-instance-method",
                "public-abstract-method",
                "public-method",
                "private-static-method",
                "private-instance-method",
                "private-method"
              ],
              "order": "alphabetically"
            }
          }
        ],

        // Enforces kebab-case component selectors with the `app` prefix.
        "@angular-eslint/component-selector": [
          "error",
          {
            "type": "element",
            "prefix": "app",
            "style": "kebab-case"
          }
        ],

        // Enforces camelCase directive selectors with the `app` prefix.
        "@angular-eslint/directive-selector": [
          "error",
          {
            "type": "attribute",
            "prefix": "app",
            "style": "camelCase"
          }
        ]
      }
    },
    {
      "files": ["*.html"],
      "extends": ["plugin:@angular-eslint/template/recommended"],
      "rules": {}
    }
  ]
}
